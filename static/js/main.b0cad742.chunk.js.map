{"version":3,"sources":["SnackBar/SnackBar.tsx","JSONValidationErrorList.tsx","SearchBar/SearchBar.tsx","ExampleDocumentsDropdown/ExampleDocumentsDropdown.tsx","components/TransportDropdown.tsx","AppBar/AppBar.tsx","themes/openrpcTheme.ts","PlaygroundSplitPane.tsx","hooks/useParsedSchema.tsx","hooks/useDefaultEditorValue.tsx","hooks/useSearchBar.tsx","hooks/useQueryParams.tsx","stores/queryParamsStore.ts","stores/searchBarStore.ts","stores/inspectorActionStore.ts","plugins/InspectorPlugin.tsx","hooks/useUISchema.tsx","stores/UISchemaStore.ts","UISchema.tsx","examplesList.tsx","OpenRPCEditor.tsx","hooks/useMonacoReplaceMetaSchema.tsx","hooks/useMonacoVimMode.tsx","hooks/useTransport.ts","fetchUrlSchemaFile.tsx","App.tsx","index.tsx"],"names":["NotificationType","withStyles","theme","list","color","palette","secondary","main","height","listStyle","overflow","wrapper","maxHeight","props","classes","markers","length","className","map","marker","key","message","startLineNumber","startColumn","title","marginLeft","spacing","appBar","uiSchema","searchBarUrl","onChangeUrl","InputBase","value","placeholder","style","width","onChange","event","target","ExampleDocumentsDropdown","examples","React","anchorEl","setAnchorEl","Tooltip","Button","onClick","currentTarget","variant","endIcon","fontSize","Menu","id","keepMounted","open","Boolean","onClose","maxWidth","example","MenuItem","handleMenuItemClick","Grid","container","item","xs","Typography","name","url","TransportDropdown","selectedTransport","transports","onAddTransport","useState","dialogOpen","setDialogOpen","selectedCustomTransport","setSelectedCustomTransport","customTransportName","setCustomTransportName","customTransportUri","setCustomTransportUri","dialogMenuAnchorEl","setDialogMenuAnchorEl","Dialog","aria-labelledby","Container","justify","alignItems","padding","paddingTop","paddingBottom","marginTop","gutterBottom","direction","display","background","borderRadius","marginRight","filter","type","transport","i","handleCustomTransportDialogMenuItemClick","marginBottom","uri","disabled","ApplicationBar","this","onSplitViewChange","onDarkModeChange","onExampleDocumentsDropdownChange","AppBar","position","elevation","Toolbar","sm","md","alt","src","Hidden","smDown","transportList","onTransportAdd","onTransportChange","Paper","IconButton","Component","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","debug","SnackBarCntWrapper","other","Icon","SnackbarContent","classNames","aria-describedby","icon","iconVariant","action","aria-label","close","SnackBarContentWrapper","green","backgroundColor","dark","primary","amber","opacity","margin","SnackBarWrapper","notification","isEmpty","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","SnackBar","lightTheme","createMuiTheme","MuiAppBar","MuiCard","overrides","MuiPaper","root","zIndex","MuiToolbar","colorDefault","colorPrimary","default","darkTheme","grey","paper","MuiTable","MuiTypography","PlaygroundSplitPane","split","onlyRenderSplit","splitLeft","leftStyle","rightStyle","left","right","dir","defaultSize","window","innerHeight","innerWidth","minSize","maxSize","size","flexDirection","useParsedSchema","defaultValue","parsedSchema","setParsedSchema","validateAndSetSchema","schema","maybeSchema","JSON","parse","e","refParser","dereference","then","dereferencedSchema","_","defer","localStorage","setItem","useEffect","useDefaultEditorValue","getItem","setDefaultValue","str","useSearchBar","useQueryParams","qs","location","search","ignoreQueryPrefix","depth","decoder","test","parseFloat","decodeURIComponent","createStore","queryParamStore","query","schemaUrl","InspectorPlugin","exampleParams","searchBarStore","searchUrl","useInspectorActionStore","setInspectorContents","method","openrpcMethodObject","emptyParams","paramStructure","params","reduce","memo","p","request","jsonrpc","role","useUISchema","UISchema","setUISchema","section","a","b","queryParamsStore","methods","OpenRPCEditor","model","editorRef","useRef","windowSize","useWindowSize","undefined","current","layout","dispose","editorOptions","useShadows","minimap","enabled","scrollBeyondLastLine","lineNumbers","editorDidMount","__","editor","modelUri","monaco","createModel","setModel","addDiagnostics","toString","onMarkerChange","onDidChangeModelDecorations","debounce","mk","getModelMarkers","resource","language","ev","useMonacoReplaceMetaSchema","metaSchema","setMetaSchema","addAction","label","keybindings","chord","CtrlCmd","KEY_K","KEY_R","contextMenuGroupId","contextMenuOrder","run","result","prompt","initVimMode","require","useMonacoVimMode","vimMode","setVimMode","KEY_V","defaultTransports","properties","headers","patternProperties","credentials","enum","getTransportFromType","transportOptions","localTransportType","find","localTransport","WebSocketTransport","HTTPTransport","PostMessageIframeTransport","PostMessageWindowTransport","intermediateTransport","Object","Transport","connect","sendData","internalID","results","data","InterTransport","assign","useTransport","defaultTransportType","setTransport","transportConnected","setTransportConnected","transportType","setTransportType","setError","doSetTransport","catch","t","fetch","response","status","Error","text","App","setMarkers","setSearchUrl","useDebounce","searchUrlDebounced","setResults","setNotification","UISchemaStore","setUISchemaBySection","setEditor","horizontalSplit","privateSetHorizontalSplit","setHorizontalSplit","val","setTimeout","inspectorContents","setTheme","defaultExample","setReactJsonOptions","reactJsonOptions","setValue","collapseStringsAfterLength","displayDataTypes","displayObjectSize","indentWidth","setTransportList","currentTheme","selectedTransportType","refreshOpenRpcDocument","includes","fetchUrlSchemaFile","rd","d","stringify","CssBaseline","changedTransport","addedTransport","oldList","hideToggleTheme","openrpcDocument","overflowY","ed","mks","methodPlugins","Tabs","indicatorColor","bottom","Tab","paddingRight","border","hint","top","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0cad742.chunk.js","sourcesContent":["import {\n  Snackbar,\n  SnackbarContent,\n  WithStyles,\n  withStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { IUISchema } from \"../UISchema\";\nimport {isEmpty} from \"lodash\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport green from \"@material-ui/core/colors/green\";\nimport amber from \"@material-ui/core/colors/amber\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n  debug: InfoIcon,\n};\n\nconst styleSnackBar = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing(2),\n  },\n  close: {\n    padding: theme.spacing(1),\n  },\n  margin: {\n    margin: theme.spacing(2),\n  },\n});\n\nconst styleSnackBarContent = (theme: Theme) => ({\n  success: {\n    color: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    color: theme.palette.primary.dark,\n  },\n  debug: {\n    color: theme.palette.secondary.dark,\n  },\n  warning: {\n    color: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(2),\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  close: {\n    padding: theme.spacing(1),\n  },\n  margin: {\n    margin: theme.spacing(2),\n  },\n\n});\n\nexport enum NotificationType {\n  error = \"error\",\n  warn = \"warning\",\n  info = \"info\",\n  success= \"success\",\n  debug = \"debug\",\n}\n\ninterface IProps extends WithStyles<typeof styleSnackBar> {\n  uiSchema?: IUISchema;\n  notification: ISnackBarNotification;\n  close: any;\n}\n\ninterface ISnackBarContentProps extends WithStyles<typeof styleSnackBarContent> {\n uiSchema?: IUISchema;\n onClose: any;\n variant: NotificationType;\n className: string;\n message: JSX.Element;\n}\n\nexport interface ISnackBarNotification {\n  type: NotificationType;\n  message: string;\n}\n\nclass SnackBarCntWrapper extends React.Component<ISnackBarContentProps> {\n  public render() {\n    const { classes, className, message, onClose, variant, ...other } = this.props;\n    const Icon = variantIcon[variant];\n    return (\n      <SnackbarContent\n        className={classNames(classes[variant], className)}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={classNames(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={onClose}\n          >\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n        {...other}\n      />\n    );\n  }\n}\nconst SnackBarContentWrapper = withStyles(styleSnackBarContent)(SnackBarCntWrapper);\n\nclass SnackBarWrapper extends Component<IProps> {\n\n  public render() {\n    const { classes, notification, close } = this.props;\n    if (isEmpty(notification)) { return null; }\n    return (\n      <Snackbar\n      open\n      autoHideDuration={10000}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}>\n      <SnackBarContentWrapper\n      onClose={close}\n      variant={notification.type}\n      message={<span>{notification.message}</span>}\n      className={classes.margin}\n      />\n      </Snackbar>\n    );\n  }\n}\nexport const SnackBar = withStyles(styleSnackBar)(SnackBarWrapper);\n","import React from \"react\";\nimport { withStyles, Theme, WithStyles } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => ({\n  list: {\n    color: theme.palette.secondary.main,\n    height: \"100%\",\n    listStyle: \"none\",\n    overflow: \"scroll\",\n  },\n  wrapper: {\n    maxHeight: \"200px\",\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  markers: any[];\n}\n\nconst JSONValidationErrorList: React.FC<IProps> = (props) => {\n  const { classes, markers } = props;\n  if (!markers || markers.length === 0) { return null; }\n  return (\n    <div className={classes.wrapper}>\n      <ul className={classes.list}>\n        {markers && markers.map((marker) => {\n          return (\n            <li key={marker.message}>\n              {marker.startLineNumber}:{marker.startColumn} - {marker.message}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n\n};\n\nexport default withStyles(styles)(JSONValidationErrorList);\n","import React from \"react\";\nimport {\n  InputBase,\n  Theme,\n  WithStyles,\n  withStyles,\n} from \"@material-ui/core\";\nimport { IUISchema } from \"../UISchema\";\n\nconst styles = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing(2),\n  },\n  appBar: {\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  uiSchema?: IUISchema;\n  searchBarUrl: string | undefined;\n  onChangeUrl?: any;\n  onDarkModeChange?: any;\n  onSplitViewChange?: any;\n}\n\nconst SearchBar: React.FC<IProps> = (props) => {\n  const { uiSchema, searchBarUrl, onChangeUrl } = props;\n  const handleChange = (event: any) => {\n    onChangeUrl(event.target.value);\n  };\n  return (\n    <InputBase value={searchBarUrl} placeholder={uiSchema && uiSchema.appBar[\"ui:inputPlaceholder\"]} style={{ width: \"100%\" }}  onChange={handleChange}/>\n  );\n};\n\nexport default withStyles(styles)(SearchBar);\n","import * as React from \"react\";\nimport { Menu, MenuItem, Tooltip, Button, Grid, Typography } from \"@material-ui/core\";\nimport DropdownIcon from \"@material-ui/icons/ArrowDropDown\";\n\nexport interface IExample {\n  name: \"string\";\n  url: \"string\";\n}\n\ninterface IProps {\n  onChange?: (example: IExample) => any;\n  examples?: IExample[];\n}\n\nconst ExampleDocumentsDropdown: React.FC<IProps> = ({ examples, onChange }) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (example: IExample) => {\n    setAnchorEl(null);\n    if (onChange) {\n      onChange(example);\n    }\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  if (!examples) {\n    return null;\n  }\n\n  return (\n    <>\n      <Tooltip title={\"Example OpenRPC Documents\"}>\n        <Button\n          onClick={handleClick}\n          variant=\"outlined\"\n          endIcon={<DropdownIcon />}\n          style={{ height: \"38px\", fontSize: \"11px\", marginLeft: \"10px\" }}\n        >examples</Button>\n      </Tooltip>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <div style={{ maxWidth: \"525px\" }}>\n          {examples.map((example: any) => (\n            <MenuItem onClick={(event) => handleMenuItemClick(example)}>\n              <Grid container spacing={0}>\n                <Grid item xs={12}>\n                  <Typography variant=\"subtitle1\">{example.name}</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant=\"caption\" style={{ fontSize: \"9px\" }}>{example.url}</Typography>\n                </Grid>\n              </Grid>\n            </MenuItem>\n          ))}\n        </div>\n\n      </Menu>\n    </>\n  );\n};\n\nexport default ExampleDocumentsDropdown;\n","import React, { useState, ChangeEvent } from \"react\";\nimport { Button, Menu, MenuItem, Typography, Dialog, Container, Grid, InputBase } from \"@material-ui/core\";\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\nimport PlusIcon from \"@material-ui/icons/Add\";\nimport DropdownArrowIcon from \"@material-ui/icons/ArrowDropDown\";\nimport { ITransport } from \"../hooks/useTransport\";\n\ninterface IProps {\n  transports?: ITransport[];\n  selectedTransport?: ITransport;\n  onChange?: (changedTransport: ITransport) => void;\n  onAddTransport?: (addedTransport: ITransport) => void;\n  style?: CSSProperties;\n}\n\nconst TransportDropdown: React.FC<IProps> = ({ selectedTransport, transports, onChange, style, onAddTransport }) => {\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleMenuItemClick = (transport: ITransport) => {\n    setAnchorEl(null);\n    if (onChange) {\n      onChange(transport);\n    }\n  };\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\n\n  const [selectedCustomTransport, setSelectedCustomTransport] = useState<ITransport | undefined>();\n  const [customTransportName, setCustomTransportName] = useState<string | undefined>();\n  const [customTransportUri, setCustomTransportUri] = useState<string | undefined>();\n\n  const [dialogMenuAnchorEl, setDialogMenuAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleDialogAnchorClose = () => {\n    setDialogMenuAnchorEl(null);\n  };\n  const handleDialogCustomTransportClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setDialogMenuAnchorEl(event.currentTarget);\n  };\n\n  const handleCustomTransportDialogMenuItemClick = (transport: ITransport) => {\n    setDialogMenuAnchorEl(null);\n    setSelectedCustomTransport(transport);\n  };\n\n  const handleSubmitCustomTransport = () => {\n    setDialogMenuAnchorEl(null);\n    if (selectedCustomTransport && customTransportName && customTransportUri) {\n      const t: ITransport = {\n        type: \"plugin\",\n        transport: selectedCustomTransport,\n        name: customTransportName,\n        uri: customTransportUri,\n      };\n      if (onAddTransport) {\n        onAddTransport(t);\n      }\n      setDialogOpen(false);\n    }\n  };\n  return (\n    <div style={style}>\n      <Dialog onClose={() => setDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n        <Container maxWidth=\"sm\">\n          <Grid\n            container\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style={{ padding: \"30px\", paddingTop: \"10px\", paddingBottom: \"10px\", marginTop: \"10px\" }}>\n            <Typography variant=\"h6\">Custom Transport Plugin</Typography>\n            <Typography variant=\"caption\" gutterBottom>\n              Transport plugins are created by implementing the \"connect\",\n              \"sendData\", and \"close\" methods over JSON-RPC.\n             </Typography>\n            <Grid container direction=\"column\" spacing={1}>\n              <Grid item>\n                <InputBase placeholder=\"Plugin Name\"\n                  onChange={\n                    (event: ChangeEvent<HTMLInputElement>) => {\n                      setCustomTransportName(event.target.value);\n                    }\n                  }\n                  style={{\n                    display: \"block\",\n                    background: \"rgba(0,0,0,0.1)\",\n                    borderRadius: \"4px\",\n                    padding: \"0px 10px\",\n                    marginRight: \"5px\",\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <InputBase placeholder=\"Plugin URI\"\n                  onChange={\n                    (event: ChangeEvent<HTMLInputElement>) => {\n                      setCustomTransportUri(event.target.value);\n                    }\n                  }\n                  style={{\n                    display: \"block\",\n                    background: \"rgba(0,0,0,0.1)\",\n                    borderRadius: \"4px\",\n                    padding: \"0px 10px\",\n                    marginRight: \"5px\",\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"outlined\"\n                  onClick={handleDialogCustomTransportClick}>\n                  {selectedCustomTransport ? selectedCustomTransport.name : \"Select A Transport\"}\n                </Button>\n              </Grid>\n            </Grid>\n            <Menu\n              id=\"transport-menu\"\n              anchorEl={dialogMenuAnchorEl}\n              keepMounted\n              open={Boolean(dialogMenuAnchorEl)}\n              onClose={handleDialogAnchorClose}\n            >\n              {transports && transports.filter((value) => value.type !== \"plugin\").map((transport, i) => (\n                <MenuItem\n                  onClick={() => handleCustomTransportDialogMenuItemClick(transport)}\n                >{transport.name}</MenuItem>\n              ))}\n            </Menu>\n            <Button\n              style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n              onClick={handleSubmitCustomTransport}\n              disabled={!customTransportName || !customTransportUri || !selectedCustomTransport}\n              variant=\"contained\">\n              Add Transport\n            </Button>\n          </Grid>\n        </Container>\n      </Dialog>\n      <Button\n        style={{\n          marginRight: \"10px\",\n          marginLeft: \"5px\",\n        }}\n        variant=\"outlined\"\n        onClick={handleClick} endIcon={<DropdownArrowIcon />}\n      >{selectedTransport && selectedTransport.name}</Button>\n      <Menu\n        id=\"transport-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {transports && transports.map((transport, i) => (\n          <MenuItem onClick={() => handleMenuItemClick(transport)}>{transport.name}</MenuItem>\n        ))}\n        <MenuItem onClick={() => setDialogOpen(true)}>\n          <PlusIcon style={{ marginRight: \"5px\" }} /><Typography variant=\"caption\">Add Transport</Typography>\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n};\n\nexport default TransportDropdown;\n","import React, { Component } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Grid,\n  IconButton,\n  Paper,\n  Theme,\n  WithStyles,\n  withStyles,\n  Hidden,\n  Tooltip,\n} from \"@material-ui/core\";\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { IUISchema } from \"../UISchema\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport ExampleDocumentsDropdown, { IExample } from \"../ExampleDocumentsDropdown/ExampleDocumentsDropdown\";\nimport { ITransport } from \"../hooks/useTransport\";\nimport TransportDropdown from \"../components/TransportDropdown\";\n\nconst styles = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing(2),\n  },\n  appBar: {\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  uiSchema?: IUISchema;\n  examples?: IExample[];\n  transportList?: ITransport[];\n  selectedTransport?: ITransport;\n  searchBarUrl?: string | undefined;\n  onChangeUrl?: any;\n  onDarkModeChange?: any;\n  onSplitViewChange?: (split: boolean) => any;\n  onExampleDocumentsDropdownChange?: (example: IExample) => any;\n  onTransportAdd: (transport: ITransport) => any;\n  onTransportChange: (transport: ITransport) => any;\n}\n\nclass ApplicationBar extends Component<IProps> {\n  public render() {\n    const {\n      uiSchema,\n      classes,\n      onSplitViewChange,\n      onDarkModeChange,\n      examples,\n      onExampleDocumentsDropdownChange,\n    } = this.props;\n    return (\n      <AppBar position=\"fixed\" color=\"default\" elevation={0} className={classes.appBar}>\n        <Toolbar>\n          <Grid alignItems=\"center\" container>\n            <Grid item xs={6} sm={6} md={2} direction=\"row\" container>\n              {this.props.uiSchema && this.props.uiSchema.appBar && this.props.uiSchema.appBar[\"ui:logoUrl\"] &&\n                <Grid>\n                  <img\n                    alt=\"playground-title\"\n                    height=\"30\"\n                    src={this.props.uiSchema.appBar[\"ui:logoUrl\"]} />\n                </Grid>\n              }\n              <Grid style={{ overflow: \"hidden\" }}>\n                <Typography className={classes.title} variant=\"h6\">\n                  {uiSchema && uiSchema.appBar[\"ui:title\"]}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Hidden smDown>\n              <Grid item container justify=\"center\" alignItems=\"center\" sm={8} >\n                <Grid item>\n                  <TransportDropdown\n                    transports={this.props.transportList}\n                    onAddTransport={this.props.onTransportAdd}\n                    selectedTransport={this.props.selectedTransport}\n                    onChange={this.props.onTransportChange}\n                    style={{\n                      marginLeft: \"10px\",\n                    }}\n                  />\n                </Grid>\n                <Grid item sm={6}>\n                  {this.props.uiSchema && this.props.uiSchema.appBar && this.props.uiSchema.appBar[\"ui:input\"] &&\n                    <Paper style={{\n                      background: \"rgba(0, 0, 0, 0.1)\",\n                      padding: \"0px 10px 0px 10px\",\n                      width: \"100%\",\n                    }} elevation={0}>\n                      <SearchBar\n                        searchBarUrl={this.props.searchBarUrl}\n                        onChangeUrl={this.props.onChangeUrl}\n                        uiSchema={uiSchema}\n                      />\n                    </Paper>\n                  }\n                </Grid>\n                {this.props.uiSchema && this.props.uiSchema.appBar &&\n                  this.props.uiSchema.appBar[\"ui:examplesDropdown\"] &&\n                  <ExampleDocumentsDropdown examples={examples} onChange={onExampleDocumentsDropdownChange} />\n                }\n              </Grid>\n            </Hidden>\n            <Grid item xs={6} sm={6} md={2} container justify=\"flex-end\" alignItems=\"center\">\n              {uiSchema && uiSchema.appBar[\"ui:splitView\"] ?\n                <Tooltip title={\"Full Screen\"}>\n                  <IconButton onClick={() => {\n                    if (onSplitViewChange) {\n                      onSplitViewChange(false);\n                    }\n                  }}>\n                    <FullscreenIcon />\n                  </IconButton>\n                </Tooltip>\n                :\n                <Tooltip title={\"Edit\"}>\n                  <IconButton onClick={() => {\n                    if (onSplitViewChange) {\n                      onSplitViewChange(true);\n                    }\n                  }}>\n                    <EditIcon />\n                  </IconButton>\n                </Tooltip>\n              }\n              <Tooltip title=\"Toggle Dark Theme\">\n                <IconButton>\n                  {uiSchema && uiSchema.appBar[\"ui:darkMode\"] ?\n                    <Brightness3Icon onClick={() => onDarkModeChange(false)} />\n                    :\n                    <WbSunnyIcon onClick={() => onDarkModeChange(true)} />\n                  }\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar >\n    );\n  }\n}\nexport default withStyles(styles)(ApplicationBar);\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport const lightTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        zIndex: 1,\n        opacity: 1,\n      },\n    },\n    MuiToolbar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiAppBar: {\n      root: {\n        backgroundColor: \"transparent !important\",\n      },\n      colorDefault: {\n        background: \"transparent !important\",\n      },\n      colorPrimary: {\n        background: \"transparent !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n  },\n  palette: {\n    type: \"dark\",\n    background: {\n      default: grey[900],\n      paper: grey[900],\n    },\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        zIndex: 1,\n        opacity: 1,\n      },\n    },\n    MuiAppBar: {\n      root: {\n        background: \"transparent !important\",\n      },\n      colorPrimary: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiToolbar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: grey[400],\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import SplitPane from \"react-split-pane\";\nimport React from \"react\";\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\n\ninterface IProps {\n  onChange?: (size: number) => any;\n  left: any;\n  right: any;\n  leftStyle?: CSSProperties;\n  rightStyle?: CSSProperties;\n  style?: CSSProperties;\n  direction?: \"horizontal\" | \"vertical\";\n  splitLeft?: boolean;\n  split?: boolean;\n  onlyRenderSplit?: boolean;\n}\n\nconst PlaygroundSplitPane: React.FC<IProps> = (props) => {\n  const handleChange = (size: number) => {\n    if (props.onChange) {\n      props.onChange(size);\n    }\n  };\n\n  if (props.split === false && props.onlyRenderSplit) {\n    return (\n      <div key={2} style={props.splitLeft ? props.leftStyle : props.rightStyle}>\n        {props.splitLeft ? props.left : props.right}\n      </div>\n    );\n  }\n\n  const dir = props.direction || \"vertical\";\n  const defaultSize = !props.split\n    ? dir === \"horizontal\" ? window.innerHeight : window.innerWidth\n    : dir === \"horizontal\" ? window.innerHeight * .35 : window.innerWidth / 2;\n  return (\n    <SplitPane split={dir}\n      style={props.style}\n      className={\"playground-splitview\"}\n      minSize={100}\n      maxSize={0}\n      defaultSize={defaultSize}\n      size={defaultSize}\n      onChange={handleChange}>\n      <div style={\n        props.leftStyle ? { ...props.leftStyle, ...{ display: \"flex\", flexDirection: \"column\", height: \"100%\" } }\n          : { display: \"flex\", flexDirection: \"column\", height: \"100%\" }\n      } key={1}>\n        {props.left}\n      </div>\n      <div key={2} style={props.rightStyle}>\n        {props.right}\n      </div>\n    </SplitPane >\n  );\n};\n\nexport default PlaygroundSplitPane;\n","import { useState, useEffect, Dispatch } from \"react\";\nimport _ from \"lodash\";\nimport refParser from \"json-schema-ref-parser\";\nimport { OpenrpcDocument } from \"@open-rpc/meta-schema\";\n\nconst useParsedSchema = (defaultValue: object | any): [OpenrpcDocument | undefined, Dispatch<string>] => {\n  const [parsedSchema, setParsedSchema]: [OpenrpcDocument | undefined, Dispatch<OpenrpcDocument>] = useState();\n  const validateAndSetSchema = (schema: string) => {\n    let maybeSchema: string | undefined;\n    try {\n      maybeSchema = JSON.parse(schema);\n    } catch (e) {\n      //\n    }\n    if (!maybeSchema) {\n      return;\n    }\n    refParser.dereference(maybeSchema).then((dereferencedSchema) => {\n      setParsedSchema(dereferencedSchema as OpenrpcDocument);\n      // set original non-dereff'd schema to localstorage\n      _.defer(() => window.localStorage.setItem(\"schema\", schema as string));\n    });\n  };\n  useEffect(() => {\n    if (defaultValue) {\n      validateAndSetSchema(defaultValue);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return [parsedSchema, validateAndSetSchema];\n};\n\nexport default useParsedSchema;\n","import { useState, Dispatch } from \"react\";\nimport _ from \"lodash\";\n\nfunction useDefaultEditorValue(): [string | null, Dispatch<any>] {\n  const [defaultValue, setDefaultValue] = useState<string | null>(() => {\n    return window.localStorage.getItem(\"schema\");\n  });\n  const setDefaultEditorValue = (str: string) => {\n    _.defer(() => window.localStorage.setItem(\"schema\", str));\n    setDefaultValue(str);\n  };\n  return [defaultValue, setDefaultEditorValue];\n}\n\nexport default useDefaultEditorValue;\n","import { useState, Dispatch } from \"react\";\n\ninterface ISearchBarResponse {\n  results: any;\n  error: string | undefined;\n}\n\nconst useSearchBar = (defaultValue: string | undefined): [string | undefined, Dispatch<any>] => {\n  const [searchUrl, setSearchUrl] = useState<string | undefined>(defaultValue);\n  return [searchUrl, setSearchUrl];\n};\n\nexport default useSearchBar;\n","import { useState } from \"react\";\nimport * as qs from \"qs\";\n\nconst useQueryParams = () => {\n  const parse = () => {\n    return qs.parse(window.location.search, {\n      ignoreQueryPrefix: true,\n      depth: 100,\n      decoder(str) {\n        if (/^(\\d+|\\d*\\.\\d+)$/.test(str)) {\n          return parseFloat(str);\n        }\n        if (str === \"false\") {\n          return false;\n        }\n        if (str === \"true\") {\n          return true;\n        }\n        return decodeURIComponent(str);\n      },\n    });\n  };\n  const [query] = useState(parse());\n  return [query];\n};\n\nexport default useQueryParams;\n","import { createStore } from \"reusable\";\nimport useQueryParams from \"../hooks/useQueryParams\";\n\nexport default createStore(() => {\n  return useQueryParams();\n});\n","import { createStore } from \"reusable\";\nimport useSearchBar from \"../hooks/useSearchBar\";\nimport queryParamStore from \"./queryParamsStore\";\n\nexport default createStore(() => {\n  const [query] = queryParamStore();\n\n  return useSearchBar(query.schemaUrl || query.url);\n});\n","import { createStore } from \"reusable\";\nimport { useState } from \"react\";\n\nexport default createStore(() => {\n  const [inspectorContents, setInspectorContents] = useState();\n  return [inspectorContents, setInspectorContents];\n});\n","import React from \"react\";\nimport { Button, Tooltip } from \"@material-ui/core\";\nimport { IMethodPluginProps } from \"@open-rpc/docs-react/build/Methods/Methods\";\nimport searchBarStore from \"../stores/searchBarStore\";\nimport { ExamplePairingObject, ExampleObject } from \"@open-rpc/meta-schema\";\nimport useInspectorActionStore from \"../stores/inspectorActionStore\";\n\nexport type TParamStructure = \"either\" | \"by-name\" | \"by-position\";\n\nconst InspectorPlugin: React.FC<IMethodPluginProps> = (props) => {\n  const [searchUrl] = searchBarStore();\n  const [, setInspectorContents] = useInspectorActionStore();\n  const method = props.openrpcMethodObject;\n  const examplePosition = 0;\n  let example;\n  let exampleParams: any;\n  let emptyParams = [] as any;\n  if (method && method.examples && method.examples[examplePosition]) {\n    example = method.examples[examplePosition] as ExamplePairingObject;\n    const paramStructure: TParamStructure = method.paramStructure || \"either\";\n    exampleParams = paramStructure === \"by-name\"\n      ? (example.params as ExampleObject[]).reduce(((memo, p) => {\n        memo[p.name] = p.value;\n        return memo;\n      }), {} as any)\n      : (example.params as ExampleObject[]).map(((p) => p.value));\n  }\n  if (method && method.paramStructure === \"by-name\") {\n    emptyParams = {};\n  }\n  return (\n    <Tooltip title=\"Open in Inspector\">\n      <Button variant=\"contained\" onClick={() => setInspectorContents({\n        url: searchUrl,\n        openrpcMethodObject: props.openrpcMethodObject,\n        request: {\n          jsonrpc: \"2.0\",\n          method: method.name,\n          params: exampleParams || emptyParams,\n          id: 0,\n        },\n      })}><span role=\"img\" aria-label=\"try-it-inspector\">🕵️‍♂️</span>️️ Try It Now</Button>\n\n    </Tooltip>\n  );\n};\n\nexport default InspectorPlugin;\n","import { useState } from \"react\";\nimport { IUISchema } from \"../UISchema\";\n\ntype SetSectionType = ({ section, key, value }: {\n  section: string;\n  key: string;\n  value: any;\n}) => any;\n\nconst useUISchema = (defaultValue: IUISchema): [IUISchema, SetSectionType] => {\n  const [UISchema, setUISchema] = useState(defaultValue);\n  const setUISchemaBySection: SetSectionType = ({ section, key, value }) => {\n    setUISchema({\n      ...UISchema,\n      [section]: {\n        ...UISchema.appBar,\n        [key]: value,\n      },\n    });\n  };\n  return [UISchema, setUISchemaBySection];\n};\n\nexport default useUISchema;\n","import { createStore } from \"reusable\";\nimport useUISchema from \"../hooks/useUISchema\";\nimport queryParamsStore from \"./queryParamsStore\";\nimport { mergeUISchema } from \"../UISchema\";\n\nexport default createStore(() => {\n  const [query] = queryParamsStore();\n\n  const defaultUISchema = {\n    appBar: {\n      \"ui:input\": true,\n      \"ui:inputPlaceholder\": \"Enter OpenRPC Document Url or rpc.discover Endpoint\",\n      /* tslint:disable */\n      \"ui:logoUrl\": \"https://github.com/open-rpc/design/raw/master/icons/open-rpc-logo-noText/open-rpc-logo-noText%20(PNG)/128x128.png\",\n      /* tslint:enable */\n      \"ui:splitView\": true,\n      \"ui:darkMode\": false,\n      \"ui:title\": \"Playground\",\n      \"ui:examplesDropdown\": true,\n    },\n    methods: {\n      \"ui:defaultExpanded\": false,\n      \"ui:methodPlugins\": true,\n    },\n    params: {\n      \"ui:defaultExpanded\": false,\n    },\n  };\n  return useUISchema(mergeUISchema(defaultUISchema, query.uiSchema));\n});\n","export interface IUISchema {\n  appBar: {\n    [\"ui:title\"]: string,\n    [\"ui:logoUrl\"]: string,\n    [\"ui:input\"]: boolean,\n    [\"ui:inputPlaceholder\"]: string,\n    [\"ui:splitView\"]: boolean,\n    [\"ui:darkMode\"]: boolean,\n    [\"ui:examplesDropdown\"]: boolean,\n  };\n  methods: {\n    [\"ui:defaultExpanded\"]: boolean,\n    [\"ui:methodPlugins\"]: boolean,\n  };\n  params: {\n    [\"ui:defaultExpanded\"]: boolean,\n  };\n}\n\nexport const mergeUISchema = (a: IUISchema, b: IUISchema) => {\n  if (a && b) {\n    return {\n      appBar: {\n        ...a.appBar,\n        ...b.appBar || {},\n      },\n      methods: {\n        ...a.methods,\n        ...b.methods || {},\n      },\n      params: {\n        ...a.params,\n        ...b.params || {},\n      },\n    };\n  } else {\n    return a || b;\n  }\n};\n","export default [\n  {\n    name: \"api-with-examples\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/api-with-examples-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"link-example\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/link-example-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"params-by-name-petstore\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/params-by-name-petstore-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"petstore-expanded\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/petstore-expanded-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"petstore\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/petstore-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"simple-math\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/simple-math-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"empty-document\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/empty-openrpc.json\", //tslint:disable-line\n  },\n];\n","import React, { useRef, useEffect } from \"react\";\nimport MonacoEditor from \"@etclabscore/react-monaco-editor\";\nimport * as monaco from \"monaco-editor\";\nimport useWindowSize from \"@rehooks/window-size\";\nimport { addDiagnostics } from \"@etclabscore/monaco-add-json-schema-diagnostics\";\nimport schema from \"@open-rpc/meta-schema\";\nimport _ from \"lodash\";\n\ninterface IProps {\n  onChange?: (newValue: any) => void;\n  editorDidMount?: (_: any, editor: any) => any;\n  onMarkerChange?: (markers: monaco.editor.IMarker[]) => void;\n  value: any;\n}\n\nconst OpenRPCEditor: React.FC<IProps> = (props) => {\n  const editorRef = useRef();\n  const windowSize = useWindowSize();\n  let model: any;\n\n  useEffect(() => {\n    if (editorRef !== undefined && editorRef.current !== undefined) {\n      (editorRef.current as any).layout();\n    }\n  }, [windowSize]);\n\n  useEffect(() => {\n    return function cleanup() {\n      if (model) {\n        model.dispose();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function handleEditorDidMount(__: any, editor: any) {\n    editorRef.current = editor;\n    const modelUriString = `inmemory://openrpc-playground.json`;\n    const modelUri = monaco.Uri.parse(modelUriString);\n    model = monaco.editor.createModel(props.value || \"\", \"json\", modelUri);\n    editor.setModel(model);\n    addDiagnostics(modelUri.toString(), schema, monaco);\n    if (props.editorDidMount) {\n      props.editorDidMount(_, editor);\n    }\n    if (!props.onMarkerChange) {\n      return;\n    }\n    editor.onDidChangeModelDecorations(_.debounce(() => {\n      if (props.onMarkerChange) {\n        const mk = monaco.editor.getModelMarkers({\n          resource: modelUri,\n        });\n        props.onMarkerChange(mk);\n      }\n    }, 300));\n  }\n\n  const handleChange = (ev: any, value: any) => {\n    if (props.onChange) {\n      props.onChange(value);\n    }\n  };\n\n  return (\n    <MonacoEditor\n      height=\"100%\"\n      editorOptions={{\n        useShadows: false,\n        minimap: {\n          enabled: false,\n        },\n        scrollBeyondLastLine: false,\n        lineNumbers: \"on\",\n      }}\n      value={props.value}\n      editorDidMount={handleEditorDidMount}\n      language=\"json\"\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default OpenRPCEditor;\n","import { useState, useEffect } from \"react\";\nimport * as monaco from \"monaco-editor\";\nimport schema from \"@open-rpc/meta-schema\";\n\n// Monaco Replace Meta Schema:\n// Press Chord Ctrl-K, Ctrl-R => the action will run if it is enabled\nconst useMonacoReplaceMetaSchema = (editor: monaco.editor.IStandaloneCodeEditor) => {\n  const [metaSchema, setMetaSchema] = useState(schema);\n\n  useEffect(() => {\n    if (!editor) { return; }\n\n    editor.addAction({\n      id: \"replace-meta-schema\",\n      label: \"Replace Meta Schema\",\n      keybindings: [\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_R), //tslint:disable-line\n      ],\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 1.5,\n      run: () => {\n        const result = window.prompt(\"Paste schema to replace current meta schema\", \"{}\");\n        if (result) {\n          setMetaSchema(JSON.parse(result));\n        }\n      },\n    });\n  }, [editor]);\n\n  return [metaSchema];\n};\n\nexport default useMonacoReplaceMetaSchema;\n","import { useState, useEffect } from \"react\";\nimport * as monaco from \"monaco-editor\";\nconst { initVimMode } = require(\"monaco-vim\"); //tslint:disable-line\n\n// Vim Mode:\n// Press Chord Ctrl-K, Ctrl-V => the action will run if it is enabled\nconst useMonacoVimMode = (editor: monaco.editor.IStandaloneCodeEditor) => {\n  const [vimMode, setVimMode] = useState();\n\n  useEffect(() => {\n    if (!editor) { return; }\n\n    editor.addAction({\n      id: \"vim-mode\",\n      label: \"Vim Mode\",\n      keybindings: [\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_V), //tslint:disable-line\n      ],\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 1.5,\n      run: () => {\n        if (vimMode) {\n          vimMode.dispose();\n        }\n        setVimMode(initVimMode(editor));\n      },\n    });\n\n    return () => {\n      if (vimMode) {\n        vimMode.dispose();\n      }\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor]);\n\n  return [editor, vimMode];\n};\n\nexport default useMonacoVimMode;\n","import { JSONRPCError } from \"@open-rpc/client-js/build/Error\";\nimport { Dispatch, useEffect, useState } from \"react\";\nimport { HTTPTransport, WebSocketTransport, PostMessageWindowTransport, PostMessageIframeTransport } from \"@open-rpc/client-js\";\nimport { Transport } from \"@open-rpc/client-js/build/transports/Transport\";\nimport { IJSONRPCData } from \"@open-rpc/client-js/build/Request\";\nimport { JSONSchema } from \"@open-rpc/meta-schema\";\n\nexport type TTransport = \"http\" | \"websocket\" | \"postmessagewindow\" | \"postmessageiframe\";\n\nexport const defaultTransports: ITransport[] = [\n  {\n    type: \"http\",\n    name: \"HTTP\",\n    schema: {\n      type: \"object\",\n      properties: {\n        headers: {\n          patternProperties: {\n            \"\": {\n              type: \"string\",\n            },\n          },\n        },\n        credentials: {\n          type: \"string\",\n          enum: [\n            \"omit\",\n            \"same-origin\",\n            \"include\",\n          ],\n        },\n      },\n      examples: [\n        {\n          headers: {\n          },\n        },\n      ],\n    },\n  },\n  {\n    type: \"websocket\",\n    name: \"WebSocket\",\n  },\n  {\n    type: \"postmessagewindow\",\n    name: \"PostMessageWindow\",\n  },\n  {\n    type: \"postmessageiframe\",\n    name: \"PostMessageIframe\",\n  },\n];\n\nexport interface IWebTransport {\n  type: TTransport;\n  name?: string;\n  schema?: JSONSchema;\n}\n\nexport interface IPluginTransport {\n  type: \"plugin\";\n  uri: string;\n  name: string;\n  transport: ITransport;\n}\nconst getTransportFromType = async (\n  uri: string,\n  transports: ITransport[],\n  transport: ITransport,\n  transportOptions?: any,\n): Promise<Transport> => {\n  let localTransport: any;\n  const localTransportType = transports.find((value) => {\n    return value.type === transport.type;\n  });\n  if (localTransportType?.type === \"websocket\") {\n    localTransport = new WebSocketTransport(uri);\n  } else if (localTransportType?.type === \"http\") {\n    localTransport = new HTTPTransport(uri, transportOptions);\n  } else if (localTransportType?.type === \"postmessageiframe\") {\n    localTransport = new PostMessageIframeTransport(uri);\n  } else if (localTransportType?.type === \"postmessagewindow\") {\n    localTransport = new PostMessageWindowTransport(uri);\n  } else if (localTransportType?.type === \"plugin\") {\n    const intermediateTransport = await getTransportFromType(\n      localTransportType.uri,\n      transports,\n      localTransportType.transport,\n    );\n    const InterTransport = Object.assign({}, Transport, {\n      async connect() {\n        await intermediateTransport.connect();\n        const results = await intermediateTransport.sendData({\n          internalID: 0,\n          request: {\n            jsonrpc: \"2.0\",\n            method: \"connect\",\n            params: [uri],\n            id: 0,\n          },\n        });\n        return results;\n      },\n      sendData(data: IJSONRPCData): Promise<any> {\n        return intermediateTransport.sendData({\n          internalID: 0,\n          request: {\n            jsonrpc: \"2.0\",\n            method: \"sendData\",\n            params: [data.request],\n            id: 0,\n          },\n        });\n      },\n      close() {\n        return intermediateTransport.sendData({\n          internalID: 0,\n          request: {\n            jsonrpc: \"2.0\",\n            method: \"close\",\n            params: [],\n            id: 0,\n          },\n        });\n      },\n    });\n    localTransport = new InterTransport();\n  }\n\n  return localTransport;\n};\n\nexport type ITransport = IWebTransport | IPluginTransport;\n\ntype TUseTransport = (\n  transports: ITransport[],\n  url: string,\n  defaultTransportType: ITransport,\n  transportOptions?: any,\n) => [Transport | undefined, ITransport, (t: ITransport) => void, JSONRPCError | undefined, boolean];\n\nexport const useTransport: TUseTransport = (transports, url, defaultTransportType, transportOptions) => {\n  const [transport, setTransport] = useState<Transport>();\n  const [transportConnected, setTransportConnected] = useState<boolean>(false);\n  const [transportType, setTransportType]:\n    [ITransport | undefined, Dispatch<ITransport>] = useState(defaultTransportType);\n  const [error, setError]: [JSONRPCError | undefined, Dispatch<JSONRPCError | undefined>] = useState();\n  useEffect(() => {\n    if (url === \"\" || url === undefined) {\n      setTransport(undefined);\n      return;\n    }\n    if (!transportType) {\n      return;\n    }\n    const doSetTransport = async () => {\n      const localTransport = await getTransportFromType(url, transports, transportType, transportOptions);\n      return localTransport.connect().then(() => {\n        setTransportConnected(true);\n        setTransport(localTransport);\n      });\n    };\n\n    doSetTransport()\n      .catch((e: JSONRPCError) => {\n        setTransportConnected(false);\n        setTransport(undefined);\n        setError(e);\n      });\n  }, [transportType, url, transports, transportOptions]);\n\n  const setSelectedTransportType = async (t: ITransport) => {\n    setTransportConnected(false);\n    setTransportType(t);\n  };\n  return [transport, transportType, setSelectedTransportType, error, transportConnected];\n};\n\nexport default useTransport;\n","export default async (schemaUrl: string) => {\n  const response = await fetch(schemaUrl);\n  if (response.status === 404) {\n    throw new Error(\"404: Not Found\");\n  }\n  return response.text();\n};\n","import React, { useState, useEffect, Dispatch } from \"react\";\nimport JSONValidationErrorList from \"./JSONValidationErrorList\";\nimport * as monaco from \"monaco-editor\";\nimport { Documentation } from \"@open-rpc/docs-react\";\nimport \"./App.css\";\nimport AppBar from \"./AppBar/AppBar\";\nimport { IUISchema } from \"./UISchema\";\nimport { SnackBar, ISnackBarNotification, NotificationType } from \"./SnackBar/SnackBar\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { lightTheme, darkTheme } from \"./themes/openrpcTheme\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport { CssBaseline, Container, Tab, Typography, IconButton, Tooltip, Tabs } from \"@material-ui/core\";\nimport PlaygroundSplitPane from \"./PlaygroundSplitPane\";\nimport useParsedSchema from \"./hooks/useParsedSchema\";\nimport useDefaultEditorValue from \"./hooks/useDefaultEditorValue\";\nimport InspectorPlugin from \"./plugins/InspectorPlugin\";\nimport UISchemaStore from \"./stores/UISchemaStore\";\nimport searchBarStore from \"./stores/searchBarStore\";\nimport examples from \"./examplesList\";\nimport OpenRPCEditor from \"./OpenRPCEditor\";\nimport useMonacoReplaceMetaSchema from \"./hooks/useMonacoReplaceMetaSchema\";\nimport useMonacoVimMode from \"./hooks/useMonacoVimMode\";\nimport { IExample } from \"./ExampleDocumentsDropdown/ExampleDocumentsDropdown\";\nimport Inspector from \"@open-rpc/inspector\";\nimport useInspectorActionStore from \"./stores/inspectorActionStore\";\nimport { useTransport, defaultTransports, ITransport } from \"./hooks/useTransport\";\nimport fetchUrlSchemaFile from \"./fetchUrlSchemaFile\";\nimport queryParamsStore from \"./stores/queryParamsStore\";\nimport { useDebounce } from \"use-debounce\";\n\nconst App: React.FC = () => {\n  const [defaultValue, setDefaultValue] = useDefaultEditorValue();\n  const [markers, setMarkers] = useState<monaco.editor.IMarker[]>([] as monaco.editor.IMarker[]);\n  const [searchUrl, setSearchUrl] = searchBarStore();\n  const [searchUrlDebounced] = useDebounce(searchUrl, 1000);\n  const [results, setResults] = useState<any>();\n  const [error, setError] = useState<string | undefined>();\n  const [notification, setNotification] = useState<ISnackBarNotification | undefined>();\n  const [UISchema, setUISchemaBySection]: [IUISchema, any] = UISchemaStore();\n  const [editor, setEditor]: [any, Dispatch<{}>] = useState();\n  const [horizontalSplit, privateSetHorizontalSplit] = useState(false);\n  const [parsedSchema, setParsedSchema] = useParsedSchema(\n    defaultValue ? JSON.parse(defaultValue) : null,\n  );\n  const [query] = queryParamsStore();\n  const setHorizontalSplit = (val: boolean) => {\n    if (editor) {\n      setTimeout(() => {\n        editor.layout();\n      }, 0);\n    }\n    privateSetHorizontalSplit(val);\n  };\n  const [inspectorContents] = useInspectorActionStore();\n  useMonacoReplaceMetaSchema(editor);\n  useMonacoVimMode(editor);\n\n  const handleEditorDidMount = (__: any, ed: any) => {\n    setEditor(ed);\n  };\n\n  useEffect(() => {\n    monaco.editor.setTheme(UISchema.appBar[\"ui:darkMode\"] ? \"vs-dark\" : \"vs\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const defaultExample = examples.find((e) => e.name === \"petstore\");\n    if (!defaultValue && !searchUrl && defaultExample) {\n      setSearchUrl(defaultExample.url);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [defaultValue]);\n\n  useEffect(() => {\n    setReactJsonOptions({\n      ...reactJsonOptions,\n      theme: UISchema.appBar[\"ui:darkMode\"] ? \"summerfruit\" : \"summerfruit:inverted\",\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [UISchema.appBar[\"ui:darkMode\"]]);\n\n  useEffect(() => {\n    if (results && editor) {\n      editor.setValue(results);\n    }\n    if (results) {\n      setParsedSchema(results!);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [results]);\n\n  useEffect(() => {\n    if (error) {\n      setNotification({\n        type: NotificationType.error,\n        message: error,\n      });\n    }\n  }, [error]);\n\n  useEffect(() => {\n    setParsedSchema(defaultValue || \"\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [defaultValue]);\n  const [reactJsonOptions, setReactJsonOptions] = useState({\n    theme: \"summerfruit:inverted\",\n    collapseStringsAfterLength: 25,\n    displayDataTypes: false,\n    displayObjectSize: false,\n    indentWidth: 2,\n    name: false,\n  });\n  const [transportList, setTransportList] = useState(defaultTransports);\n  const getQueryTransport = () => {\n    if (!query.transport) {\n      return transportList[0];\n    }\n    const queryTransport = transportList.find((item) => item.type === query.transport);\n    return queryTransport || transportList[0];\n  };\n  const currentTheme = UISchema.appBar[\"ui:darkMode\"] ? darkTheme : lightTheme;\n  const [transport, selectedTransportType, setTransportType] = useTransport(\n    transportList,\n    searchUrlDebounced,\n    getQueryTransport(),\n  );\n  const refreshOpenRpcDocument = async () => {\n    // handle .json urls\n    if (searchUrlDebounced && searchUrlDebounced.includes(\".json\")) {\n      const rd = await fetchUrlSchemaFile(searchUrlDebounced);\n      setDefaultValue(rd);\n      return setResults(rd);\n    }\n    try {\n      const d = await transport?.sendData({\n        internalID: 999999,\n        request: {\n          jsonrpc: \"2.0\",\n          params: [],\n          id: 999999,\n          method: \"rpc.discover\",\n        },\n      });\n      const rd = JSON.stringify(d, null, 2);\n      if (rd) {\n        setDefaultValue(rd);\n        setResults(rd);\n      }\n    } catch (e) {\n      setError(e.message);\n    }\n  };\n\n  useEffect(() => {\n    if (searchUrlDebounced && transport) {\n      refreshOpenRpcDocument();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchUrlDebounced, transport]);\n\n  useEffect(() => {\n    if (inspectorContents) {\n      setHorizontalSplit(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inspectorContents]);\n  return (\n    <MuiThemeProvider theme={currentTheme}>\n      <CssBaseline />\n      <AppBar\n        searchBarUrl={searchUrl}\n        uiSchema={UISchema}\n        examples={examples as IExample[]}\n        onExampleDocumentsDropdownChange={(example: IExample) => setSearchUrl(example.url)}\n        selectedTransport={selectedTransportType}\n        transportList={transportList}\n        onTransportChange={(changedTransport) => setTransportType(changedTransport)}\n        onTransportAdd={(addedTransport: ITransport) => {\n          setTransportList((oldList) => {\n            return [\n              ...oldList,\n              addedTransport,\n            ];\n          });\n        }}\n        onSplitViewChange={(value) => {\n          setUISchemaBySection({\n            value,\n            key: \"ui:splitView\",\n            section: \"appBar\",\n          });\n        }}\n        onDarkModeChange={(value: boolean) => {\n          monaco.editor.setTheme(value ? \"vs-dark\" : \"vs\");\n          setUISchemaBySection({\n            value,\n            key: \"ui:darkMode\",\n            section: \"appBar\",\n          });\n        }}\n        onChangeUrl={setSearchUrl}\n      />\n      <PlaygroundSplitPane\n        direction=\"horizontal\"\n        splitLeft={true}\n        split={horizontalSplit}\n        leftStyle={{\n          width: \"100%\",\n          height: \"100%\",\n        }}\n        right={\n          <>\n            <Inspector hideToggleTheme={true} url={\n              searchUrlDebounced && searchUrlDebounced.includes(\".json\") ? null : searchUrlDebounced\n            }\n              transport={selectedTransportType.type !== \"plugin\" ? selectedTransportType.type : undefined}\n              request={inspectorContents && inspectorContents.request}\n              openrpcDocument={parsedSchema}\n            />\n          </>\n        }\n        onChange={() => editor && editor.layout()}\n        left={\n          <PlaygroundSplitPane\n            onlyRenderSplit={true}\n            split={UISchema.appBar[\"ui:splitView\"]}\n            leftStyle={{\n              paddingTop: \"58px\",\n              height: \"94%\",\n              width: \"100%\",\n            }}\n            rightStyle={{\n              height: \"94%\",\n              width: \"100%\",\n              overflowY: \"auto\",\n              marginTop: \"58px\",\n              paddingBottom: \"58px\",\n            }}\n            onChange={() => editor && editor.layout()}\n            left={\n              <>\n                <JSONValidationErrorList markers={markers} />\n                <OpenRPCEditor\n                  editorDidMount={handleEditorDidMount}\n                  onMarkerChange={(mks) => {\n                    setMarkers(mks);\n                  }}\n                  onChange={(val) => {\n                    setParsedSchema(val);\n                  }}\n                  value={defaultValue || \"\"}\n                />\n              </>\n            }\n            right={\n              <>\n                <Container>\n                  <Documentation\n                    schema={parsedSchema as any}\n                    uiSchema={UISchema}\n                    reactJsonOptions={reactJsonOptions}\n                    methodPlugins={\n                      UISchema.methods[\"ui:methodPlugins\"]\n                        ? [InspectorPlugin]\n                        : undefined\n                    }\n                  />\n                </Container>\n                <Tabs\n                  variant=\"scrollable\"\n                  indicatorColor=\"primary\"\n                  value={0}\n                  style={{ position: \"absolute\", bottom: \"0\", right: \"25px\", zIndex: 1, marginBottom: \"0px\" }}\n                >\n                  <Tab\n                    onClick={() => setHorizontalSplit(!horizontalSplit)}\n                    style={{\n                      background: currentTheme.palette.background.default,\n                      width: \"165px\",\n                      paddingRight: \"30px\",\n                      border: `1px solid ${currentTheme.palette.text.hint}`,\n                    }}\n                    label={\n                      <div>\n                        <Typography\n                          variant=\"body1\"><span role=\"img\" aria-label=\"inspector\">🕵️‍♂️</span>️ Inspector</Typography>\n                        <Tooltip title=\"Toggle Inspector\">\n                          <IconButton style={{ position: \"absolute\", right: \"5px\", top: \"20%\" }} size=\"small\">\n                            {horizontalSplit\n                              ? <ExpandMore />\n                              : <ExpandLess />\n                            }\n                          </IconButton>\n                        </Tooltip>\n                      </div>\n                    }>\n                  </Tab>\n                </Tabs>\n              </>\n            }\n          />\n\n        }\n      />\n      <SnackBar\n        close={() => setNotification({} as ISnackBarNotification)}\n        notification={notification as ISnackBarNotification} />\n    </MuiThemeProvider>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ReusableProvider } from \"reusable\";\n\nReactDOM.render(\n  <ReusableProvider>\n    <App />\n  </ReusableProvider>\n, document.getElementById(\"root\"));\n"],"sourceRoot":""}