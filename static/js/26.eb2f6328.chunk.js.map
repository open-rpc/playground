{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/mips/mips.js"],"names":["conf","wordPattern","comments","blockComment","lineComment","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","regEx","keywords","symbols","escapes","tokenizer","root","cases","token","next","string","herestring","comment","hereregexp"],"mappings":"sIAAA,qFAKO,IAAIA,EAAO,CACdC,YAAa,wFACbC,SAAU,CACNC,aAAc,CAAC,MAAO,OACtBC,YAAa,KAEjBC,QAAS,CACLC,QAAS,CACLC,MAAO,IAAIC,OAAO,mBAClBC,IAAK,IAAID,OAAO,yBAIjBE,EAAW,CAClBC,aAAc,GACdC,YAAY,EACZC,aAAc,QACdC,MAAO,qCACPC,SAAU,CACN,QAAS,QAAS,UAAW,OAC7B,MAAO,OAAQ,OAAQ,QAAS,MAAO,OACvC,MAAO,OAAQ,OAAQ,QAAS,MAAO,KAAM,MAC7C,MAAO,MAAO,MAAO,OAAQ,MAAO,OACpC,MAAO,OAAQ,MAAO,OAAQ,MAAO,MACrC,MAAO,MAAO,MAAO,OAAQ,OAAQ,QACrC,MAAO,OAAQ,OAAQ,MAAO,IAAK,MAAO,OAAQ,KAClD,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,KACtC,KAAM,KAAM,KAAM,OAAQ,OAAQ,OAAQ,OAAQ,QAGtDC,QAAS,WACTC,QAAS,yEAETC,UAAW,CACPC,KAAM,CAEF,CAAC,iBAAkB,uBACnB,CAAC,gBAAiB,CACVC,MAAO,CACH,KAAQ,sBACR,YAAa,CAAEC,MAAO,cACtB,WAAY,MAIxB,CAAC,aAAc,IAEf,CAAC,OAAQ,WAET,CAAC,MAAO,CAAEA,MAAO,SAAUC,KAAM,gBACjC,CAAC,iBAAkB,CAAC,GAAI,WACxB,CAAC,oBAAqB,CAAC,YAAa,GAAI,WACxC,CAAC,oBAAqB,CAAC,YAAa,GAAI,WAExC,CAAC,WAAY,aAEb,CAAC,sBAAuB,gBACxB,CAAC,2BAA4B,gBAC7B,CAAC,oBAAqB,cACtB,CAAC,gBAAiB,gBAClB,CAAC,MAAO,UAER,CAAC,OAAQ,aAET,CAAC,MAAO,SAAU,mBAClB,CAAC,MAAO,SAAU,mBAClB,CAAC,IAAK,CACEF,MAAO,CACH,OAAQ,SACR,WAAY,CAAEC,MAAO,SAAUC,KAAM,gBAGjD,CAAC,IAAK,CACEF,MAAO,CACH,OAAQ,SACR,WAAY,CAAEC,MAAO,SAAUC,KAAM,iBAIrDC,OAAQ,CACJ,CAAC,aAAc,UACf,CAAC,WAAY,iBACb,CAAC,KAAM,yBACP,CAAC,KAAM,yBACP,CAAC,KAAM,CACCH,MAAO,CACH,SAAU,CAAEC,MAAO,SAAUC,KAAM,2BACnC,WAAY,YAGxB,CAAC,OAAQ,CACDF,MAAO,CACH,UAAW,CAAEC,MAAO,SAAUC,KAAM,QACpC,WAAY,YAGxB,CAAC,IAAK,WAEVE,WAAY,CACR,CAAC,YAAa,CACNJ,MAAO,CACH,UAAW,CAAEC,MAAO,SAAUC,KAAM,QACpC,WAAY,YAGxB,CAAC,YAAa,UACd,CAAC,QAAS,UACV,CAAC,WAAY,iBACb,CAAC,KAAM,yBACP,CAAC,KAAM,CAAED,MAAO,eAAgBC,KAAM,4BACtC,CAAC,IAAK,WAEVG,QAAS,CACL,CAAC,QAAS,WACV,CAAC,IAAK,YAEVC,WAAY,CACR,CAAC,YAAa,UACd,CAAC,MAAO,UACR,CAAC,OAAQ,WACT,CAAC,YAAa,CAAEL,MAAO,SAAUC,KAAM,SACvC,CAAC,KAAM","file":"static/js/26.eb2f6328.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        blockComment: ['###', '###'],\n        lineComment: '#'\n    },\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: false,\n    tokenPostfix: '.mips',\n    regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\n    keywords: [\n        '.data', '.text', 'syscall', 'trap',\n        'add', 'addu', 'addi', 'addiu', 'and', 'andi',\n        'div', 'divu', 'mult', 'multu', 'nor', 'or', 'ori',\n        'sll', 'slv', 'sra', 'srav', 'srl', 'srlv',\n        'sub', 'subu', 'xor', 'xori', 'lhi', 'lho',\n        'lhi', 'llo', 'slt', 'slti', 'sltu', 'sltiu',\n        'beq', 'bgtz', 'blez', 'bne', 'j', 'jal', 'jalr', 'jr',\n        'lb', 'lbu', 'lh', 'lhu', 'lw', 'li', 'la',\n        'sb', 'sh', 'sw', 'mfhi', 'mflo', 'mthi', 'mtlo', 'move',\n    ],\n    // we include these common regular expressions\n    symbols: /[\\.,\\:]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/\\$[a-zA-Z_]\\w*/, 'variable.predefined'],\n            [/[.a-zA-Z_]\\w*/, {\n                    cases: {\n                        'this': 'variable.predefined',\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': ''\n                    }\n                }],\n            // whitespace\n            [/[ \\t\\r\\n]+/, ''],\n            // Comments\n            [/#.*$/, 'comment'],\n            // regular expressions\n            ['///', { token: 'regexp', next: '@hereregexp' }],\n            [/^(\\s*)(@regEx)/, ['', 'regexp']],\n            [/(\\,)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\:)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            // delimiters\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d+[eE]([\\-+]?\\d+)?/, 'number.float'],\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\n            [/0[0-7]+(?!\\d)/, 'number.octal'],\n            [/\\d+/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[,.]/, 'delimiter'],\n            // strings:\n            [/\"\"\"/, 'string', '@herestring.\"\"\"'],\n            [/'''/, 'string', '@herestring.\\'\\'\\''],\n            [/\"/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\"' }\n                    }\n                }],\n            [/'/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\\'' }\n                    }\n                }],\n        ],\n        string: [\n            [/[^\"'\\#\\\\]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\./, 'string.escape.invalid'],\n            [/\\./, 'string.escape.invalid'],\n            [/#{/, {\n                    cases: {\n                        '$S2==\"': { token: 'string', next: 'root.interpolatedstring' },\n                        '@default': 'string'\n                    }\n                }],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/#/, 'string']\n        ],\n        herestring: [\n            [/(\"\"\"|''')/, {\n                    cases: {\n                        '$1==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/[^#\\\\'\"]+/, 'string'],\n            [/['\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\./, 'string.escape.invalid'],\n            [/#{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\n            [/#/, 'string']\n        ],\n        comment: [\n            [/[^#]+/, 'comment',],\n            [/#/, 'comment'],\n        ],\n        hereregexp: [\n            [/[^\\\\\\/#]+/, 'regexp'],\n            [/\\\\./, 'regexp'],\n            [/#.*$/, 'comment'],\n            ['///[igm]*', { token: 'regexp', next: '@pop' }],\n            [/\\//, 'regexp'],\n        ],\n    },\n};\n"],"sourceRoot":""}